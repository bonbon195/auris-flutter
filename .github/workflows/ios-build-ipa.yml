name: IOS build .ipa

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: macOS-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Flutter  
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"
          pub-cache-key: "flutter-pub:os:-:channel:-:version:-:arch:-:hash:"
          pub-cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"

      - name: Check Flutter Version
        run: flutter --version

      - name: Get Flutter packages
        run: flutter pub get
      
      # - name: Test
      #   run: flutter test

      - name: Build iOS
        run: flutter build ios --release --no-codesign --dart-define=API_URL=${{ secrets.API_URL }} --obfuscate --split-debug-info=debug_info

      - name: Install xcodeproj
        run: sudo gem install xcodeproj

      - name: Set Always Embed Swift Standard Libraries to NO
        run: |
          ruby -r xcodeproj -e 'Xcodeproj::Project.open("ios/Runner.xcodeproj").targets.each { |target| target.build_configurations.each { |config| config.build_settings["ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES"] = "NO" } }; Xcodeproj::Project.open("ios/Runner.xcodeproj").save'

      - name: Rename directory
        run: mv build/ios/iphoneos Payload

      - name: Zip Payload
        run: zip -r Payload.ipa Payload

      - name: Publish iOS Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: release-ios
          path: Payload.ipa ## TODO: include debug_info (don't need it for now)